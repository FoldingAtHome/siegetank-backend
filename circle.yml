machine:
  python:
    version: 3.3.2

  environment:
    LANG: en_US.UTF-8

checkout:
  post:
    - cd redis/src && make -j4

  cache_directories:
    - "redis"

dependencies:
  pre:
    - pip install tornado
    - pip install requests
    - pip install redis
    - pip install bcrypt
    - pip install pymongo
    - pip install sphinx
    - cmake --version
    - if [[ ! -e poco-1.5.2-all ]]; then wget http://pocoproject.org/releases/poco-1.5.2/poco-1.5.2-all.tar.gz && tar xvf poco-1.5.2-all.tar.gz; fi
    - cd poco-1.5.2-all && ./configure --no-samples --no-tests --static --prefix=/home/ubuntu/poco152_install --omit=Data/MySQL,Data/ODBC && make -j4 && make install;
    - if [[ ! -e ../openmm_install ]]; then wget http://www.stanford.edu/~yutongz/openmm_install.tar.gz; mkdir ../openmm_install; cd ../openmm_install; tar xvf ../backend/openmm_install.tar.gz; fi
    - wget http://www.stanford.edu/~yutongz/fftw_install.tar.gz
    - cd ../; tar xvf backend/fftw_install.tar.gz
    - cd core && mkdir build && cd build && cmake ../ -DPOCO_ROOT="/home/ubuntu/fftw_install" -DPOCO_ROOT=/home/ubuntu/poco152_install -DOPENMM_ROOT=/home/ubuntu/openmm_install -DCMAKE_BUILD_TYPE=Release && make


  cache_directories:
    - "poco-1.5.2-all"
    - "../poco152_install"

test:
  post:
    - cd core/build; ../tests/start_services
    - cd core/build; make test

deployment:
  production:
    branch: master
    commands:
      - cd docs; make html; git clone git@heroku.com:proteneer.git; cd proteneer; cp ../docs_server.py ./; cp -R ../_build ./; git config user.name "Yutong Zhao"; git config user.email "proteneer@gmail.com"; git add .; git commit -am "Updating heroku"; git push origin master